<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdFOkZWRTx3VkU8d1ZFPHdWRTx3VkU8d1ZF
        PHdWRTx3VkU8d1ZFPHdWRTx3VkU8d1ZFPHdWRTx3VkU8d1ZEO3RVRDMPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABVRj4hXEtC9qGUjPehlIz3oZSM96GU
        jPehlIz3oZSM96GUjPehlIz3oZSM96GUjPehlIz3oZSM96CUjPeGeXP/YlFI/mVVTMeAgAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdDOjVwYFnv/Pby//z2
        8v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL/+/Xx/7y3s/9uXlb/Z1ZO/mVT
        SpAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV0M6NXBg
        We/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/79fH/vLez/21d
        Vf/CtrD/aVhP/FlHPlYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABXQzo1cGBZ7/z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//v1
        8f+8t7P/bV1V/83CvP/PxL7/YE5G+VdGOiwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFdDOjVwYFnv/Pby//fw7P/Hvbf/xbu1/8W7tf/Fu7X/xbu1/8W7tf/Fu7X/xbu1/8W7
        tf/Fu7X/8Orm/8C7tv9tXVX/zcK8/+vh3P+2qaL/YU9G71FDNhMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAV0M6NXBgWe/89vL/5+Dc/4+Bev+Nf3j/jX94/41/eP+Nf3j/jX94/41/
        eP+Nf3j/jX94/41/eP/c08//9vDs/3VkXP/MwLr/6+Hc/+vh3P+XiYL/ZVVMyoCAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXQzo1cGBZ7/z28v/89vL//Pby//z28v/89vL//Pby//z2
        8v/89vL//Pby//z28v/89vL//Pby//z28v/89vL/npGK/2NRSf9rWlL/a1pS/2hXT/9WRDv/VkQ6ZQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdDOjVwYFnv/Pby//z28v/89vL//Pby//z2
        8v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/79fH/6eLd/+Xe2v/l3tr/5d7a/5yP
        iP5WQzt9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV0M6NXBgWe/89vL//Pby//z2
        8v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z2
        8v/89vL/p5uU/lZDO30AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXQzo1cGBZ7/z2
        8v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z2
        8v/89vL//Pby//z28v+nm5T+VkM7fQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdD
        OjVwYFnv/Pby//Dq5f+ShH3/moyG//z28v/Hvrj/jX94/41/eP+Nf3j/jX94/41/eP+Nf3j/jX94/41/
        eP+Nf3j/jX94/41/eP/NxL///Pby/6eblP5WQzt9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAV0M6NXBgWe/89vL/+fLu/8e9t//Nw77//Pby/+Pc2P/Fu7X/xbu1/8W7tf/Fu7X/xbu1/8W7
        tf/Fu7X/xbu1/8W7tf/Fu7X/xbu1/+bf2//89vL/p5uU/lZDO30AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABXQzo1cGBZ7/z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z2
        8v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v+nm5T+VkM7fQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdDOjVwYFnv/Pby//z28v/89vL//Pby//z28v/89vL//Pby//z2
        8v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby/6eblP5WQzt9AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV0M6NXBgWe/89vL//Pby//z28v/89vL//Pby//z2
        8v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL/p5uU/lZD
        O30AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXQzo1cGBZ7/z28v/n4Nv/moyG/5mL
        hP+Zi4T/mYuE/5mLhP+Zi4T/mYuE/5mLhP+Zi4T/mYuE/7Opo//89vL/yL65/5mLhP+Zi4T/0sjD//z2
        8v+nm5T+VkM7fQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdDOjVwYFnv/Pby//Dq
        5f+6sKn/ua+p/7mvqf+5r6n/ua+p/7mvqf+5r6n/ua+p/7mvqf+5r6n/z8XA//z28v/d1M7/ua+p/7mv
        qf/h2tX//Pby/6eblP5WQzt9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV0M6NXBg
        We/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z2
        8v/89vL//Pby//z28v/89vL/p5uU/lZDO30AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABXQzo1cGBZ7/z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z2
        8v/89vL//Pby//z28v/89vL//Pby//z28v+nm5T+VkM7fQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAFdDOjVwYFnv/Pby//z28v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby//z2
        8v/89vL//Pby//z28v/89vL//Pby//z28v/89vL//Pby/6eblP5WQzt9AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAV0M6NWRTSveuo53/rqOd/66jnf+uo53/rqOd/66jnf+uo53/rqOd/66j
        nf+uo53/rqOd/66jnf+uo53/rqOd/66jnf+uo53/rqOd/66jnf+uo53/gXFq/lZDO30AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXQzo1XFFM/WOCkv9jgpL/Y4KS/2OCkv9jgpL/Y4KS/2OC
        kv9jgpL/Y4KS/2OCkv9jgpL/Y4KS/2OCkv9jgpL/Y4KS/2OCkv9jgpL/Y4KS/2OCkv9cY2b/VkM7fQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdDOjVhYGD6csr3/3LK9/9yyvf/csr3/3LK
        9/9yyvf/csr3/3LK9/9yyvf/b7zk/3LK9/9yyvf/csr3/3LK9/9yyvf/csr3/3LK9/9yyvf/csr3/2WH
        l/9WQzt9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAV0M6NWFgYPpyyvf/csr3/3LK
        9/9yyvf/Xbvv/1Gy6v9Wte3/VrXs/0uLsf9UTUv/ccPs/3LK9/9yyvf/csr3/3LK9/9yyvf/csr3/3LK
        9/9yyvf/ZYeX/1ZDO30AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABXQzo1YWBg+nLK
        9/9yyvf/csr3/1W06/9Ghaz/VkxP/1ZHQf9WXmr/V09M/2yw0v9yyvf/csr3/3LK9/9yyvf/csr3/3LK
        9/9yyvf/csr3/3LK9/9lh5f/VkM7fQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVG
        PDNeWlf7cMLr/3DC6/9wwuv/XKvX/1dJSf9wWdn/dV74/2BPeP9hd4b/cMLr/3DC6/9wwuv/cMLr/3DC
        6/9wwuv/cMLr/3DC6/9wwuv/cMLr/2R/jP9WRTt6AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAVTk5CV5STNdaSkT6WkpE+lpKRPpZSkL7X09m+3Zf//92X///bFa//1ZGPv5aSkT6WkpE+lpK
        RPpaSkT6WkpE+lpKRPpaSkT6WkpE+lpKRPpaSkT6W05I8FVFOjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFBAQBBYRUL0bljL/3Nc6/9fS2z1VkZBeQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFVDO0VYRkffV0ZD8VhG
        RppAQEAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////wAAf/4AAD/+AAA//gAAH/4AAA/+AAAH/gAAA/4AAAP+AAAD/gA
        AA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gAAA/4AAAP+AAAD/gA
        AA/4AAAP+AAAD/gAAA//wP///+D///////8=
</value>
  </data>
</root>